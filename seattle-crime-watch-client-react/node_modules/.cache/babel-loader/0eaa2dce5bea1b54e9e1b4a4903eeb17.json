{"ast":null,"code":"var _jsxFileName = \"/Users/luciaren/Desktop/SeattleCrimeWatch/seattle-crime-watch-client-react/src/components/main/SearchForm.jsx\";\nimport React, { Component } from 'react';\nimport allOffense from '../../static/Offense.json';\nimport allOffenseParent from '../../static/OffenseParent.json';\nimport allOffenseCategory from '../../static/OffenseCategory.json';\nimport allMcpp from '../../static/mcpp.json';\nimport allZipcode from '../../static/zipcode.json';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Grid from '@material-ui/core/Grid';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport MyChart from '../chart/MyChart';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './css/SearchForm.css';\nimport pic from \"../../img/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios').default;\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: ['Special Elite'].join(',')\n  }\n});\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  return [year, month, day].join('-');\n}\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectOffenseType = type => {\n      if (type === 'offenseName') {\n        this.setState({\n          allOffenseData: allOffense.map(offense => offense.OffenseName)\n        });\n      } else if (type === 'offenseParent') {\n        this.setState({\n          allOffenseData: allOffenseParent.map(offense => offense.OffenseParentName)\n        });\n      } else {\n        this.setState({\n          allOffenseData: allOffenseCategory.map(offense => offense.OffenseCategory)\n        });\n      }\n    };\n\n    this.selectLocationType = type => {\n      if (type === 'zipcode') {\n        this.setState({\n          allLocationData: allZipcode.map(zipcode => zipcode.zipcode)\n        });\n        this.setState({\n          locationData: allZipcode[0].zipcode\n        });\n      } else {\n        this.setState({\n          allLocationData: allMcpp.map(mcpp => mcpp.MCPPName)\n        });\n        this.setState({\n          locationData: allMcpp[0].MCPPName\n        });\n      }\n    };\n\n    this.state = {\n      offenseType: \"\",\n      offenseData: [],\n      allOffenseData: [],\n      locationType: \"\",\n      locationData: \"\",\n      allLocationData: [],\n      startDate: null,\n      endDate: null,\n      timeError: \"\",\n      timeError1: \"\",\n      errorMessage: \"\",\n      crimes: [],\n      series: [],\n      categories: [],\n      displayTable: true\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOffenseTypeChange = this.handleOffenseTypeChange.bind(this);\n    this.handleOffenseDataChange = this.handleOffenseDataChange.bind(this);\n    this.selectOffenseType = this.selectOffenseType.bind(this);\n    this.handleLocationTypeChange = this.handleLocationTypeChange.bind(this);\n    this.handleLocationDataChange = this.handleLocationDataChange.bind(this);\n    this.selectLocationType = this.selectLocationType.bind(this);\n    this.handleStartDateChange = this.handleStartDateChange.bind(this);\n    this.handleEndDateChange = this.handleEndDateChange.bind(this);\n    this.clearContent = this.clearContent.bind(this);\n    this.helper = this.helper.bind(this);\n    this.changeDisplay = this.changeDisplay.bind(this);\n  }\n\n  handleOffenseTypeChange(event) {\n    this.setState({\n      offenseType: event.target.value\n    }); // After changing type, the former offense data must be cleared\n\n    this.setState({\n      offenseData: []\n    });\n    this.selectOffenseType(event.target.value);\n  }\n\n  handleOffenseDataChange(event) {\n    this.setState({\n      offenseData: event.target.value\n    });\n  }\n\n  handleLocationTypeChange(event) {\n    this.setState({\n      locationType: event.target.value\n    }); // After changing type, the former location data must be cleared\n\n    this.setState({\n      locationData: null\n    });\n    this.selectLocationType(event.target.value);\n  }\n\n  handleLocationDataChange(event) {\n    this.setState({\n      locationData: event.target.value\n    });\n  }\n\n  handleStartDateChange(date) {\n    this.setState({\n      startDate: date,\n      timeError: \"\",\n      timeError1: \"\"\n    });\n\n    if (date <= new Date(2008, 0, 1)) {\n      this.setState({\n        timeError: \"You can only search data after 2008-01-01! \"\n      });\n    }\n\n    if (this.state.endDate !== null && date > this.state.endDate) {\n      this.setState({\n        timeError1: \"The end date must be larger than start date! \"\n      });\n    }\n  }\n\n  handleEndDateChange(date) {\n    this.setState({\n      endDate: date,\n      timeError: \"\",\n      timeError1: \"\"\n    });\n\n    if (date >= new Date(2020, 9, 1)) {\n      this.setState({\n        timeError: \"You can only search data before 2020-10-01! \"\n      });\n    }\n\n    if (this.state.startDate !== null && date < this.state.startDate) {\n      this.setState({\n        timeError1: \"The end date must be larger than start date! \"\n      });\n    }\n  }\n\n  clearContent() {\n    this.setState({\n      offenseType: \"\",\n      offenseData: [],\n      allOffenseData: [],\n      locationType: \"\",\n      locationData: \"\",\n      allLocationData: [],\n      startDate: null,\n      endDate: null,\n      timeError: \"\",\n      timeError1: \"\",\n      errorMessage: \"\",\n      crimes: [],\n      series: [],\n      categories: [],\n      displayTable: true\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.offenseData.length === 0) {\n      this.setState({\n        errorMessage: \"Please select at least one offenseName\"\n      });\n    } else if (this.state.timeError !== \"\" || this.state.timeError1 !== \"\") {\n      this.setState({\n        errorMessage: \"Please fix all errors\"\n      });\n    } else {\n      this.setState({\n        errorMessage: \"\"\n      });\n      axios.post(\"/api/searchCrimes\", {\n        offenseType: this.state.offenseType,\n        offenseName: this.state.offenseData,\n        startDate: formatDate(this.state.startDate),\n        endDate: formatDate(this.state.endDate),\n        zipCode: this.state.zipCode,\n        locationType: this.state.locationType,\n        locationData: this.state.locationData\n      }).then(response => {\n        this.setState({\n          displayTable: true,\n          crimes: response.data\n        });\n        this.helper();\n      }).catch(err => console.log(err));\n    }\n  }\n\n  helper() {\n    let x = [];\n    let y = [];\n\n    for (let i = 0; i < this.state.crimes[0].length; i++) {\n      x.push(this.state.crimes[0][i].crimeTime);\n    }\n\n    for (let j = 0; j < this.state.crimes.length; j++) {\n      let k = [];\n\n      for (let m = 0; m < this.state.crimes[j].length; m++) {\n        k.push(this.state.crimes[j][m].count);\n      }\n\n      y.push({\n        name: this.state.crimes[j][0].crimeName,\n        data: k\n      });\n    }\n\n    this.setState({\n      categories: x,\n      series: y\n    });\n  }\n\n  changeDisplay() {\n    this.setState({\n      displayTable: !this.state.displayTable\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"logo\",\n            src: pic,\n            alt: \"Loading...\",\n            width: \"150rem\",\n            height: \"100rem\",\n            overflow: \"hidden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justify: \"center\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"offenseType\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  children: [\"Offense Type\", /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"selectbox\",\n                    id: \"select-offenseType\",\n                    value: this.state.offenseType,\n                    onChange: this.handleOffenseTypeChange,\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      hidden: true,\n                      value: \"\",\n                      children: \"Choose Offense Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"offenseName\",\n                      children: \"Offense Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"offenseParent\",\n                      children: \"Offense Parent\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"offenseCategory\",\n                      children: \"Offense Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                style: {\n                  backgroundColor: \"white\"\n                },\n                onChange: (event, value) => {\n                  this.setState({\n                    offenseData: value\n                  });\n                } // prints the selected value\n                ,\n                multiple: true,\n                id: \"tags-standard\",\n                options: this.state.allOffenseData,\n                getOptionLabel: option => option,\n                value: this.state.offenseData,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  variant: \"standard\",\n                  label: \"Choose OffenseName\",\n                  placeholder: \"OffenseName\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            className: \"date-picker\",\n            container: true,\n            direction: \"row\",\n            justify: \"center\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                utils: DateFnsUtils,\n                children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                  disableToolbar: true,\n                  variant: \"inline\",\n                  format: \"MM/dd/yyyy\",\n                  margin: \"normal\",\n                  label: \"Start Date\",\n                  value: this.state.startDate,\n                  onChange: newDate => {\n                    this.handleStartDateChange(newDate);\n                  },\n                  KeyboardButtonProps: {\n                    'aria-label': 'change date'\n                  },\n                  className: \"date-small\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                utils: DateFnsUtils,\n                children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                  disableToolbar: true,\n                  variant: \"inline\",\n                  format: \"MM/dd/yyyy\",\n                  margin: \"normal\",\n                  label: \"End Date\",\n                  value: this.state.endDate,\n                  onChange: newDate => {\n                    this.handleEndDateChange(newDate);\n                  },\n                  KeyboardButtonProps: {\n                    'aria-label': 'change date'\n                  },\n                  className: \"date-small\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: \"error\",\n            children: this.state.timeError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: \"error\",\n            children: this.state.timeError1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justify: \"center\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  children: [\"Location Type\", /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"selectbox\",\n                    id: \"select-locationType\",\n                    value: this.state.locationType,\n                    onChange: newType => {\n                      this.handleLocationTypeChange(newType);\n                    },\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      hidden: true,\n                      value: \"\",\n                      children: \"Choose Location Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"zipcode\",\n                      children: \"ZipCode\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"MCPP\",\n                      children: \"MCPP\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  children: [\"Location Name\", /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"selectbox\",\n                    id: \"select-locationData\",\n                    value: this.state.locationData,\n                    onChange: this.handleLocationDataChange,\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      hidden: true,\n                      value: \"\",\n                      children: \"Choose Location Value\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 21\n                    }, this), this.state.allLocationData.map((location, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: location,\n                        children: location\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 30\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            color: \"error\",\n            children: this.state.errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"submit\",\n            type: \"submit\",\n            name: \"action\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"submit\",\n            type: \"button\",\n            name: \"action\",\n            value: \"Clear\",\n            onClick: this.clearContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), this.state.crimes.length !== 0 && this.state.categories.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"display\",\n          children: this.state.displayTable ? /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"center\",\n            alignItems: \"center\",\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: this.changeDisplay,\n                children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n                  style: {\n                    width: 60,\n                    height: 60\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 9,\n              children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                component: Paper,\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  \"aria-label\": \"simple table\",\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: \"CrimeTime\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 329,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: \"CrimeLocation\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 330,\n                        columnNumber: 27\n                      }, this), this.state.crimes.map((crime, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: \"CrimeName & Count\"\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 332,\n                        columnNumber: 29\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: this.state.crimes[0].map((crime, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: crime.crimeTime\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 339,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: this.state.locationData\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 340,\n                        columnNumber: 29\n                      }, this), this.state.crimes.map((crimeItem, key) => /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"center\",\n                        children: [crimeItem[index].crimeName, \"  :  \", crimeItem[index].count]\n                      }, key, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 31\n                      }, this))]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: this.changeDisplay,\n                children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n                  style: {\n                    width: 60,\n                    height: 60\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"center\",\n            alignItems: \"center\",\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: this.changeDisplay,\n                children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n                  style: {\n                    width: 60,\n                    height: 60\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 9,\n              children: /*#__PURE__*/_jsxDEV(MyChart, {\n                categories: this.state.categories,\n                series: this.state.series\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: this.changeDisplay,\n                children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n                  style: {\n                    width: 60,\n                    height: 60\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 83\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/luciaren/Desktop/SeattleCrimeWatch/seattle-crime-watch-client-react/src/components/main/SearchForm.jsx"],"names":["React","Component","allOffense","allOffenseParent","allOffenseCategory","allMcpp","allZipcode","Autocomplete","TextField","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","Grid","ThemeProvider","createMuiTheme","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","MyChart","ArrowBackIcon","ArrowForwardIcon","IconButton","pic","axios","require","default","theme","typography","fontFamily","join","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","SearchForm","constructor","props","selectOffenseType","type","setState","allOffenseData","map","offense","OffenseName","OffenseParentName","OffenseCategory","selectLocationType","allLocationData","zipcode","locationData","mcpp","MCPPName","state","offenseType","offenseData","locationType","startDate","endDate","timeError","timeError1","errorMessage","crimes","series","categories","displayTable","handleSubmit","bind","handleOffenseTypeChange","handleOffenseDataChange","handleLocationTypeChange","handleLocationDataChange","handleStartDateChange","handleEndDateChange","clearContent","helper","changeDisplay","event","target","value","preventDefault","post","offenseName","zipCode","then","response","data","catch","err","console","log","x","y","i","push","crimeTime","j","k","m","count","name","crimeName","render","backgroundColor","option","params","newDate","newType","location","index","width","height","crime","crimeItem","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport allOffense from '../../static/Offense.json';\nimport allOffenseParent from '../../static/OffenseParent.json';\nimport allOffenseCategory from '../../static/OffenseCategory.json';\nimport allMcpp from '../../static/mcpp.json';\nimport allZipcode from '../../static/zipcode.json';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns'; \nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from '@material-ui/pickers';\nimport Grid from '@material-ui/core/Grid';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport MyChart from '../chart/MyChart'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport './css/SearchForm.css';\nimport pic from \"../../img/logo.png\"\nconst axios = require('axios').default;\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'Special Elite'\n    ].join(',')\n  }\n});\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      offenseType: \"\",\n      offenseData: [],\n      allOffenseData: [],\n      locationType: \"\",\n      locationData: \"\",\n      allLocationData: [],\n      startDate: null,\n      endDate: null,\n      timeError: \"\",\n      timeError1: \"\",\n      errorMessage: \"\",\n      crimes: [],\n      series: [],\n      categories : [],\n      displayTable: true\n    };  \n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOffenseTypeChange = this.handleOffenseTypeChange.bind(this);\n    this.handleOffenseDataChange = this.handleOffenseDataChange.bind(this);\n    this.selectOffenseType = this.selectOffenseType.bind(this);\n    this.handleLocationTypeChange = this.handleLocationTypeChange.bind(this);\n    this.handleLocationDataChange = this.handleLocationDataChange.bind(this);\n    this.selectLocationType = this.selectLocationType.bind(this);\n    this.handleStartDateChange = this.handleStartDateChange.bind(this);\n    this.handleEndDateChange = this.handleEndDateChange.bind(this);\n    this.clearContent = this.clearContent.bind(this);\n    this.helper=this.helper.bind(this);\n    this.changeDisplay=this.changeDisplay.bind(this);\n  }\n\n  handleOffenseTypeChange(event) {\n    this.setState({offenseType: event.target.value});\n    // After changing type, the former offense data must be cleared\n    this.setState({offenseData: []});\n    this.selectOffenseType(event.target.value);\n  }\n\n  selectOffenseType = (type) => {\n    if (type === 'offenseName') {\n        this.setState({ allOffenseData: allOffense.map(offense => offense.OffenseName)});\n    } else if (type === 'offenseParent') {\n        this.setState({ allOffenseData: allOffenseParent.map(offense => offense.OffenseParentName)});\n    } else {\n        this.setState({ allOffenseData: allOffenseCategory.map(offense => offense.OffenseCategory)});\n    }\n  };\n\n  handleOffenseDataChange(event) {\n    this.setState({offenseData: event.target.value});\n  }\n\n  handleLocationTypeChange(event) {\n    this.setState({locationType: event.target.value});\n    // After changing type, the former location data must be cleared\n    this.setState({locationData: null});\n    this.selectLocationType(event.target.value);\n  }\n\n  selectLocationType = (type) => {\n    if (type === 'zipcode') {\n        this.setState({ allLocationData: allZipcode.map(zipcode => zipcode.zipcode)});\n        this.setState({locationData: allZipcode[0].zipcode});\n    } else {\n        this.setState({ allLocationData: allMcpp.map(mcpp => mcpp.MCPPName)});\n        this.setState({locationData: allMcpp[0].MCPPName});\n    }\n  };\n\n  handleLocationDataChange(event) {\n    this.setState({locationData: event.target.value});\n  }\n\n  handleStartDateChange(date) {\n    this.setState({startDate: date, timeError: \"\", timeError1: \"\"});\n    if (date <= new Date(2008,0,1)) {\n      this.setState({timeError: \"You can only search data after 2008-01-01! \"});\n    }\n    if (this.state.endDate !== null && date > this.state.endDate) {\n      this.setState({timeError1: \"The end date must be larger than start date! \"});\n    }\n  }\n\n  handleEndDateChange(date) {\n    this.setState({endDate: date, timeError: \"\", timeError1: \"\"});\n    if (date >= new Date(2020,9,1)) {\n      this.setState({timeError: \"You can only search data before 2020-10-01! \"});\n    }\n    if (this.state.startDate !== null && date < this.state.startDate) {\n      this.setState({timeError1: \"The end date must be larger than start date! \"});\n    }\n  }\n\n  clearContent() {\n    this.setState({\n      offenseType: \"\",\n      offenseData: [],\n      allOffenseData: [],\n      locationType: \"\",\n      locationData: \"\",\n      allLocationData: [],\n      startDate: null,\n      endDate: null,\n      timeError: \"\",\n      timeError1: \"\",\n      errorMessage: \"\",\n      crimes: [],\n      series: [],\n      categories : [],\n      displayTable: true\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.offenseData.length === 0) {\n      this.setState({errorMessage: \"Please select at least one offenseName\"});\n    } else if (this.state.timeError !== \"\" || this.state.timeError1 !== \"\") {\n      this.setState({errorMessage: \"Please fix all errors\"});\n    } else {\n      this.setState({errorMessage: \"\"});\n      axios.post(\"/api/searchCrimes\", {offenseType: this.state.offenseType, offenseName: this.state.offenseData, startDate: formatDate(this.state.startDate), endDate: formatDate(this.state.endDate), zipCode: this.state.zipCode, locationType: this.state.locationType, locationData: this.state.locationData}).then(\n        response => {\n          this.setState({displayTable: true, crimes: response.data});\n          this.helper();\n        }\n      ).catch(err => console.log(err));\n    }\n  }\n\n  helper() {\n    let x = [];\n    let y = [];\n    for (let i = 0; i < this.state.crimes[0].length; i++) {\n      x.push(this.state.crimes[0][i].crimeTime);\n    }\n    for (let j = 0; j < this.state.crimes.length; j++) {\n      let k = [];\n      for (let m = 0; m < this.state.crimes[j].length; m++) {\n        k.push(this.state.crimes[j][m].count);\n      }\n      y.push({name: this.state.crimes[j][0].crimeName, data: k});\n    }\n    this.setState({categories: x, series: y})\n  }\n\n  changeDisplay() {\n    this.setState({displayTable: !this.state.displayTable});\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <div className=\"SearchForm\">\n          <div className='row'><img id='logo' src={pic} alt=\"Loading...\" width=\"150rem\" height='100rem' overflow='hidden'></img></div>\n          <form className=\"form\" onSubmit={this.handleSubmit}>\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n              <Grid item xs={6}>\n                <label className=\"offenseType\">\n                <Typography variant=\"h4\">Offense Type\n                  <select className='selectbox' id=\"select-offenseType\" value={this.state.offenseType} onChange={this.handleOffenseTypeChange} required>\n                    <option hidden value=\"\">Choose Offense Type</option>\n                    <option value=\"offenseName\">Offense Name</option>\n                    <option value=\"offenseParent\">Offense Parent</option>\n                    <option value=\"offenseCategory\">Offense Category</option>\n                  </select>\n                </Typography>\n                </label>\n              </Grid>\n              <Grid item xs={6}>\n                <Autocomplete\n                  style={{backgroundColor: \"white\"}}\n                  onChange={(event, value) => {\n                    this.setState({offenseData: value});\n                  }} // prints the selected value\n                  multiple\n                  id=\"tags-standard\"\n                  options={this.state.allOffenseData}\n                  getOptionLabel={(option) => option}\n                  value={this.state.offenseData}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      variant=\"standard\"\n                      label=\"Choose OffenseName\"\n                      placeholder=\"OffenseName\"\n                    />\n                  )}\n                />\n              </Grid>\n            </Grid>\n            <Grid className=\"date-picker\" container direction=\"row\" justify=\"center\" alignItems=\"center\">\n              <Grid item xs={6}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    label=\"Start Date\"\n                    value={this.state.startDate}\n                    onChange={(newDate) => {this.handleStartDateChange(newDate)}}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                    className=\"date-small\"\n                    required\n                  />\n                </MuiPickersUtilsProvider>\n              </Grid>\n              <Grid item xs={6}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    label=\"End Date\"\n                    value={this.state.endDate}\n                    onChange={(newDate) => {this.handleEndDateChange(newDate)}}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                    className=\"date-small\"\n                    required\n                  />\n                </MuiPickersUtilsProvider>\n              </Grid>\n            </Grid>\n            <Typography variant=\"h5\" color=\"error\">{this.state.timeError}</Typography>\n            <Typography variant=\"h5\" color=\"error\">{this.state.timeError1}</Typography>\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n              <Grid item xs={6}>\n                <label>\n                <Typography variant=\"h4\">Location Type\n                  <select className='selectbox' id=\"select-locationType\" value={this.state.locationType} onChange={(newType) => {this.handleLocationTypeChange(newType)}} required>\n                    <option hidden value=\"\">Choose Location Type</option>\n                    <option value=\"zipcode\">ZipCode</option>\n                    <option value=\"MCPP\">MCPP</option>\n                  </select>\n                </Typography>\n                </label>\n              </Grid>\n              <Grid item xs={6}>\n                <label>\n                <Typography variant=\"h4\">Location Name\n                  <select className='selectbox' id=\"select-locationData\" value={this.state.locationData} onChange={this.handleLocationDataChange} required>\n                    <option hidden value=\"\">Choose Location Value</option>\n                    {this.state.allLocationData.map((location, index) => {\n                      return <option key={index} value={location}>{location}</option>;\n                    })}\n                  </select>\n                </Typography>\n                </label>\n              </Grid>\n            </Grid>\n            <Typography variant=\"h3\" color=\"error\">{this.state.errorMessage}</Typography>\n            <input id='submit' type=\"submit\" name=\"action\" value=\"Submit\" />\n            <input id='submit' type=\"button\" name=\"action\" value=\"Clear\" onClick={this.clearContent} />\n          </form>\n          {this.state.crimes.length !== 0 && this.state.categories.length !== 0 ? <div className=\"display\">\n            {this.state.displayTable ?\n              <Grid container justify=\"center\" alignItems=\"center\" direction=\"row\">\n                <Grid item xs={1}>\n                  <IconButton onClick={this.changeDisplay}>\n                    <ArrowBackIcon style={{width: 60, height: 60}} />\n                  </IconButton>\n                </Grid>\n                <Grid item xs={9}>\n                  <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\" xs={12}>\n                      <TableHead>\n                        <TableRow>\n                          <TableCell align=\"center\">CrimeTime</TableCell>\n                          <TableCell align=\"center\">CrimeLocation</TableCell>\n                          {this.state.crimes.map((crime, index) => (\n                            <TableCell align=\"center\" key={index}>CrimeName & Count</TableCell>\n                          ))}\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {this.state.crimes[0].map((crime,index) => (\n                          <TableRow key={index}>\n                            <TableCell align=\"center\">{crime.crimeTime}</TableCell>\n                            <TableCell align=\"center\">{this.state.locationData}</TableCell>\n                            {this.state.crimes.map((crimeItem, key) => (\n                              <TableCell key={key} align=\"center\">{crimeItem[index].crimeName}  :  {crimeItem[index].count}</TableCell>\n                            ))}\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </Grid>\n                <Grid item xs={1}>\n                <IconButton onClick={this.changeDisplay}>\n                    <ArrowForwardIcon style={{width: 60, height: 60}} />\n                  </IconButton>\n                </Grid>\n              </Grid> : \n              <Grid container justify=\"center\" alignItems=\"center\" direction=\"row\">\n                <Grid item xs={1}>\n                  <IconButton onClick={this.changeDisplay}>\n                    <ArrowBackIcon style={{width: 60, height: 60}} />\n                  </IconButton>\n                </Grid>\n                <Grid item xs={9}>\n                  <MyChart categories={this.state.categories} series={this.state.series}/>\n                </Grid>\n                <Grid item xs={1}>\n                  <IconButton onClick={this.changeDisplay}>\n                    <ArrowForwardIcon style={{width: 60, height: 60}} />\n                  </IconButton>\n                </Grid>\n              </Grid>}\n          </div> : null}\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default SearchForm;"]},"metadata":{},"sourceType":"module"}